name: pages-auto-build-deploy
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REACT_APP_ENV: production
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions/setup-node@v3
        with:
          node-version: "16.17.0"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Cache node modules
        id: cache-node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: REACT_APP_ENV=${{ env.REACT_APP_ENV }} npm ci
      - name:
        run: rsync -v

      - name: Build
        run: REACT_APP_ENV=${{ env.REACT_APP_ENV }} npm run build

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "build/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          TARGET: "/usr/share/nginx/apps/"
          EXCLUDE: "/node_modules/"
